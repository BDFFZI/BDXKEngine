#include "Core/Runtime/CoreRuntime.h"
using namespace BDXKEngine;

//TODO 回收功能异常
//GameObject和Component不会触发指针回收，导致对象一直存在内存中，甚至导致Assets::Load加载未唤醒的对象

//TODO 替换功能异常
//目前是完全使用原始数据替换物体，这是有问题的，比如GameObject的原始数据中Scene为空，但自身因直接替换，被错误的放在了场景中。
//在Unity中这个需求涉及到预制体功能，实现方式是将差异数据写在序列化文件中，但我们的游戏引擎是不保存这些信息的，所以做不到
//之前采用了替换回调的方式，但有以下问题：
//默认销毁方式会触发事件，由于GameObject会在事件中额外销毁子物体，导致替换好的子物体会被意外删除，所以没有人敢用
//但又必须要触发事件，不然部分应该销毁的子物体将会失去控制，导致内存泄漏
//目前采用先完全删除旧物体，再替换的方式，这就导致替换事件接收到的旧物体一直都是空的
//目前对策：自行判断是否可以使用重新导入功能，比如一些资源文件，直接替换应该没问题

//TODO 加载外部数据异常
//原因同”替换功能异常“，因为目前对所有外部数据都是以直接读取原始数据的方式，这是不应该的。
//目前对策：只允许将物体创建在场景中，不允许使用外部依赖的方式

//TODO 无法自动检验是否需要重新导入
//目前很多资源已经被分到了Assets文件夹之外，或者是存在一些内置资源，导致无法方便的重新导入
//目前对策：使ProjectWindow窗口支持查看，Assets之外的文件夹，对于一些内置资源始终重新导入

int main(int argc, char* argv[])
{
    CoreRuntime::Run([]
    {

    });
}
